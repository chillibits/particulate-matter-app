/*
 * Copyright Â© Marc Auberer 2017 - 2021. All rights reserved
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'

android {
    compileSdkVersion 31
    buildToolsVersion "31.0.0"
    defaultConfig {
        applicationId "com.mrgames13.jimdo.feinstaubapp"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 3501
        versionName "3.5.1"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    packagingOptions {
        pickFirst 'META-INF/*'
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
    maven {
        url 'https://maven.google.com'
    }
}

dependencies {
    // Google dependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3'
    implementation 'androidx.core:core-ktx:1.3.0-alpha01'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.android.libraries.places:places:2.4.0'
    implementation 'com.google.maps.android:android-maps-utils:0.6.2'
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'com.google.firebase:firebase-database-ktx:20.0.2'

    // Ktor dependencies
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-serialization-jvm:$ktor_version"

    // Other dependencies
    implementation 'com.jjoe64:graphview:4.2.2'
    implementation 'com.github.turing-tech:MaterialScrollBar:13.3.2'
    implementation 'net.margaritov.preference.colorpicker.ColorPickerPreference:ColorPickerPreference:1.0.0'
    implementation 'com.github.ChilliBits:splash-screen:1.1.2'
    implementation 'com.github.coyarzun89:fabtransitionactivity:0.2.0'
    implementation 'com.github.rtchagas:pingplacepicker:2.2.0'
    implementation 'eu.davidea:flipview:1.2.0'
    implementation 'com.miguelcatalan:materialsearchview:1.4.0'
    implementation 'com.journeyapps:zxing-android-embedded:4.1.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.23'
    implementation 'com.github.TutorialsAndroid:FilePicker:v7.0.19'
    implementation 'com.stephentuso:welcome:1.4.1'
}

apply plugin: 'com.google.gms.google-services'

// Task for downloading all translation files
task downloadTranslations {
    group 'pre-build tasks'
    description 'Downloads all translation files when building the app.'

    ext.apiKey1 = '7qUo-LUKd4VIHSwRYB5005T7QQbaFCGw'
    ext.apiKey2 = 'mg24uL96-mSwhchnk4LnJAzeyBtOsYy3'

    // English
    /*doLast {
        def f = new File("${project.projectDir}/src/main/res/values/strings.xml")
        new URL("https://localise.biz/api/export/locale/en.xml?format=android&key=${apiKey1}").withInputStream { i ->
            f.withOutputStream { it << i }
        }
    }
    // Bulgarian
    doLast {
        def f = new File("${project.projectDir}/src/main/res/values-bg/strings.xml")
        new URL("https://localise.biz/api/export/locale/bg.xml?format=android&key=${apiKey1}").withInputStream { i ->
            f.withOutputStream { it << i }
        }
    }
    // Dutch
    doLast {
        def f = new File("${project.projectDir}/src/main/res/values-nl/strings.xml")
        new URL("https://localise.biz/api/export/locale/nl.xml?format=android&key=${apiKey1}").withInputStream { i ->
            f.withOutputStream { it << i }
        }
    }
    // French
    doLast {
        def f = new File("${project.projectDir}/src/main/res/values-fr/strings.xml")
        new URL("https://localise.biz/api/export/locale/fr.xml?format=android&key=${apiKey2}").withInputStream { i ->
            f.withOutputStream { it << i }
        }
    }
    // Italian
    doLast {
        def f = new File("${project.projectDir}/src/main/res/values-it/strings.xml")
        new URL("https://localise.biz/api/export/locale/it.xml?format=android&key=${apiKey1}").withInputStream { i ->
            f.withOutputStream { it << i }
        }
    }
    // Polish
    doLast {
        def f = new File("${project.projectDir}/src/main/res/values-pl/strings.xml")
        new URL("https://localise.biz/api/export/locale/pl.xml?format=android&key=${apiKey1}").withInputStream { i ->
            f.withOutputStream { it << i }
        }
    }
    // Romanian
    doLast {
        def f = new File("${project.projectDir}/src/main/res/values-ro/strings.xml")
        new URL("https://localise.biz/api/export/locale/ro.xml?format=android&key=${apiKey1}").withInputStream { i ->
            f.withOutputStream { it << i }
        }
    }
    // Russian
    doLast {
        def f = new File("${project.projectDir}/src/main/res/values-ru/strings.xml")
        new URL("https://localise.biz/api/export/locale/ru.xml?format=android&key=${apiKey1}").withInputStream { i ->
            f.withOutputStream { it << i }
        }
    }
    // German
    doLast {
        def f = new File("${project.projectDir}/src/main/res/values-de/strings.xml")
        new URL("https://localise.biz/api/export/locale/de.xml?format=android&key=${apiKey2}").withInputStream { i ->
            f.withOutputStream { it << i }
        }
    }
    // Spanish
    doLast {
        def f = new File("${project.projectDir}/src/main/res/values-es/strings.xml")
        new URL("https://localise.biz/api/export/locale/es.xml?format=android&key=${apiKey2}").withInputStream { i ->
            f.withOutputStream { it << i }
        }
    }
    // Hungarian
    doLast {
        def f = new File("${project.projectDir}/src/main/res/values-hu/strings.xml")
        new URL("https://localise.biz/api/export/locale/hu.xml?format=android&key=${apiKey2}").withInputStream { i ->
            f.withOutputStream { it << i }
        }
    }
    */
}

preBuild.dependsOn downloadTranslations